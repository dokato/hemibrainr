# Generated by roxygen2: do not edit by hand

S3method(add_Label,neuron)
S3method(add_Label,neuronlist)
S3method(add_field,neuron)
S3method(add_field,neuronlist)
S3method(arbour_cable,neuprintneuron)
S3method(arbour_cable,neuron)
S3method(arbour_cable,neuronlist)
S3method(axonic_cable,neuprintneuron)
S3method(axonic_cable,neuron)
S3method(axonic_cable,neuronlist)
S3method(axonic_points,neuron)
S3method(axonic_points,neuronlist)
S3method(dendritic_cable,neuprintneuron)
S3method(dendritic_cable,neuron)
S3method(dendritic_cable,neuronlist)
S3method(dendritic_points,neuron)
S3method(dendritic_points,neuronlist)
S3method(flow_centrality,neuron)
S3method(flow_centrality,neuronlist)
S3method(hemibrain_connectivity_similarity,matrix)
S3method(hemibrain_connectivity_similarity,numeric)
S3method(hemibrain_flow_centrality,neuron)
S3method(hemibrain_flow_centrality,neuronlist)
S3method(hemibrain_remove_bad_synapses,neuron)
S3method(hemibrain_remove_bad_synapses,neuronlist)
S3method(hemibrain_reroot,neuron)
S3method(hemibrain_reroot,neuronlist)
S3method(hemibrain_use_splitpoints,neuron)
S3method(hemibrain_use_splitpoints,neuronlist)
S3method(mixed_points,neuron)
S3method(mixed_points,neuronlist)
S3method(primary_branchpoint,neuron)
S3method(primary_branchpoint,neuronlist)
S3method(primary_dendrite_cable,neuron)
S3method(primary_dendrite_cable,neuronlist)
S3method(primary_dendrite_points,neuron)
S3method(primary_dendrite_points,neuronlist)
S3method(primary_neurite,catmaidneuron)
S3method(primary_neurite,neuprintneuron)
S3method(primary_neurite,neuron)
S3method(primary_neurite,neuronlist)
S3method(primary_neurite_cable,neuron)
S3method(primary_neurite_cable,neuronlist)
S3method(primary_neurite_points,neuron)
S3method(primary_neurite_points,neuronlist)
S3method(unsure_cable,neuprintneuron)
S3method(unsure_cable,neuron)
S3method(unsure_cable,neuronlist)
export("%>%")
export("%do%")
export("%dopar%")
export(add_Label)
export(add_field_seq)
export(arbour_cable)
export(axonal_endings)
export(axonic_cable)
export(axonic_endings)
export(axonic_points)
export(class2ids)
export(dendritic_cable)
export(dendritic_endings)
export(dendritic_points)
export(flow_centrality)
export(glomerulus)
export(grouped_adjacency)
export(hemibrain_cbf)
export(hemibrain_clean_skeleton.neuron)
export(hemibrain_colours)
export(hemibrain_compartment_metrics)
export(hemibrain_connectivity_similarity)
export(hemibrain_connectivity_similarity_distance)
export(hemibrain_connectivity_similarity_matrix)
export(hemibrain_extract_compartment_edgelist)
export(hemibrain_extract_connections)
export(hemibrain_extract_synapses)
export(hemibrain_flow_centrality)
export(hemibrain_overlap_locality)
export(hemibrain_read_neurons)
export(hemibrain_remove_bad_synapses)
export(hemibrain_reroot)
export(hemibrain_roi_meshes)
export(hemibrain_skeleton_check)
export(hemibrain_splitpoints)
export(hemibrain_use_splitpoints)
export(mixed_points)
export(nlscan_split)
export(plot3d_split)
export(primary_branchpoint)
export(primary_dendrite_cable)
export(primary_dendrite_endings)
export(primary_dendrite_points)
export(primary_neurite)
export(primary_neurite_cable)
export(primary_neurite_endings)
export(primary_neurite_points)
export(progress_natprogress)
export(prune_vertices.neuprintneuron)
export(standard_compartments)
export(standard_lineages)
export(standard_transmitters)
export(standardise)
export(unsure_cable)
importFrom(dplyr,case_when)
importFrom(dplyr,distinct)
importFrom(dplyr,filter)
importFrom(dplyr,group_by)
importFrom(dplyr,mutate)
importFrom(dplyr,n)
importFrom(dplyr,select)
importFrom(foreach,"%do%")
importFrom(foreach,"%dopar%")
importFrom(magrittr,"%>%")
importFrom(nat,as.neuronlist)
importFrom(nat,is.neuron)
importFrom(nat,is.neuronlist)
importFrom(nat,nlapply)
importFrom(nat,progress_natprogress)
importFrom(nat,prune_vertices)
importFrom(nat,xyzmatrix)
importFrom(neuprintr,neuprint_ROI_mesh)
importFrom(neuprintr,neuprint_ROIs)
importFrom(neuprintr,neuprint_get_adjacency_matrix)
importFrom(neuprintr,neuprint_get_meta)
importFrom(neuprintr,neuprint_ids)
importFrom(rlang,.data)
importFrom(stats,sd)
