% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flywire_googledrive.R
\name{flywire_ids_update}
\alias{flywire_ids_update}
\title{Update the flywire.id column in a set of google sheets based on flywire xyz positions}
\usage{
flywire_ids_update(
  selected_sheets = NULL,
  chosen.columns = c("fw.x", "fw.y", "fw.z", "flywire.xyz", "flywire.id", "skid",
    "FAFB.xyz", "cell.type", "side", "ItoLee_Hemilineage", "Hartenstein_Hemilineage",
    "hemibrain_match"),
  numCores = 1,
  max.tries = 10
)
}
\arguments{
\item{selected_sheets}{character vector. the google sheet(s) to update. Each entry is a unique google sheet ID. You can find these in a sheet's URL.
If \code{NULL} then defaults to \code{option('hemibrainr_gsheets')}.}

\item{chosen.columns}{as well as writing column updates to the specified google sheets, this function returns a \code{data.frame} built fromm all given sheets and their
individual tabs, that have been updated. This argument specifies which column you want returned. Filled with NAs if it does not exist.}

\item{numCores}{if run in parallel, the number of cores to use. This is not necessary unless you have >10k points and want to see if you can get a speed up.}

\item{max.tries}{maximum number of attempts to write to/read from the google sheets before aborting. Sometimes attempts fail due to sporadic connections or API issues.}
}
\value{
a \code{data.frame} with columns from the given google sheet(s), specified using the argument \code{chosen.columns}.
}
\description{
This function retreives flywire IDs based on xyz positions in flywire voxel space, from a set of google sheets.
It also writes the updated flywire IDs to the same google sheets. This is often helpful because flywire IDs are inherently unstable, they change every time
a neuron is modified even slightly. Users can record 'stable' points in a neuron that identify it, e.g. a single xyz position in the cell body fibre, or at the soma, and
then use this function to update and get the correct flywire ID whenever they wish.
}
\details{
For this function to work, the specified google sheet(s) must have either the column \code{flywire.xyz},
which gives the xyz position of points in a format that can be read by \code{nat::xyzmatrix}, for example \code{"(135767,79463,5284)"} or \code{"(135767;79463;5284)"}.
If this is missing, then the columns: \code{fw.x}, \code{fw.y}, \code{fw.z} must be specified. The xyz positions must be in FlyWire voxel space, which is what you get if you use the
copy location tool in the flywire.ai web-interface.

The logic of the update procedure is:, find the \code{flywire.xyz} column.
If that does not exist, find: \code{fw.x}, \code{fw.y}, \code{fw.z}, and use that to create a \code{flywire.xyz} column.
We use \code{flywire.xyz} if both are given, and there is a mismatch.
For each row, a \code{flywire.id} is then found based on these points, using \code{fafbseg::flywire_xyz2id} (using the argument \code{rawcoords = TRUE}).
The google sheet columns \code{flywire.id},\code{flywire.xyz}, \code{fw.x}, \code{fw.y}, \code{fw.z} are then updated if they exist in the original google sheet.
If they do not, they are not updated. The function returns a \code{data.frame} combining all tabs of all googlesheets specified, but returning only the columns
specified by the argument \code{chosen.columns}.
}
\examples{
\donttest{
\dontrun{

# Update flywire.ids in the sheet:
## https://docs.google.com/spreadsheets/d/1rzG1MuZYacM-vbW7100aK8HeA-BY6dWAVXQ7TB6E2cQ/edit#gid=0
## And return
fw.gsheet.meta = flywire_ids_update(selected_sheets = "1rzG1MuZYacM-vbW7100aK8HeA-BY6dWAVXQ7TB6E2cQ")

}}
}
\seealso{
\code{\link{flywire_ids}},
  \code{\link{flywire_meta}},
  \code{\link{flywire_neurons}}
}
