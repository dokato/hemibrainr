% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flywire_tracing.R
\name{flywire_tracing_sheet}
\alias{flywire_tracing_sheet}
\alias{flywire_tracing_sheets}
\alias{flywire_in}
\title{Retrieve or go to a specific google sheet describing flywire neurons.}
\usage{
flywire_tracing_sheet(
  regex,
  open = FALSE,
  selected_sheet = options()$flywire_lineages_gsheet,
  Verbose = TRUE,
  ...
)

flywire_tracing_sheets(
  regex = NULL,
  selected_sheet = options()$flywire_lineages_gsheet
)

flywire_in(
  query,
  query.type = c("flywire.id", "flywire.xyz", "flywire.svid"),
  regex = NULL,
  fw.meta = flywire_meta(),
  cloudvolume.url = NULL,
  Verbose = TRUE
)
}
\arguments{
\item{regex}{character vector, tabs (i.e. work sheets) on the google sheet to query/read. This works with regex, so you only need to give the name partially.
If set to \code{NULL} for \code{flywire_tracing_sheets}, the whole google sheet is read and all tabs are combined using \code{plyr::rbind.fill}.}

\item{open}{logial, if \code{TRUE} the relevant google sheet tab is opened in your browser. Else, a \code{data.frame} of the tab is returned.}

\item{selected_sheet}{character vector indicating the a flywire tracing google sheet. This defaults to the master 'lineage' tracing sheet used by the Drosphila Connectomics Group to
store annotations on flywire neurons in different developmental lineages. Note: You may not have access.}

\item{Verbose}{logical, if \code{TRUE} then \code{hemibrainr} communicates what it has found.}

\item{...}{methods passed to \code{googlesheets4} functions.
.}

\item{query}{a vector of data indicating flywire neurons. These can be a vector of flywire XYZ positions (readable by \code{nat::xyzmatrix}),
flywire root IDs or flywire supervoxel IDs. These are used to get the most up to date root IDs from FlyWire, which are then matched to the
results from \code{flywire_tracing_sheets}.}

\item{query.type}{wtherh the qurey is a vector of xyz positions, flywire supervoxel IDs or flywire IDs ("flywire.xyz"/"flywire.svid"/"flywire.id").}

\item{fw.meta}{a \code{data.frame} of meta data on flywire neurons, e.g. as produced by \code{flywire_tracing_sheets}.or read by \code{flywire_meta}.}

\item{cloudvolume.url}{URL for CloudVolume to fetch segmentation image data. The default value of NULL choose}
}
\value{
a \code{data.frame} with columns from the right tab, chosen using \code{regex}, from the given google sheet(s) \code{selected_sheet},
specified using the argument \code{chosen.columns}.
}
\description{
These functions can help you
either go to or read the right tab (\code{flywire_tracing_sheet}) on a large google sheet, or read the whole sheet and all of its tabs ((\code{flywire_tracing_sheets}),
note, memoised for 30 minutes).
You can also see if a flywire neuron of interest in in a google sheet (\code{flywire_in(fw.meta = flywire_tracing_sheets())}),
and see if a flywire neuron of interest is among the data stored on the hemibrainr drive, i.e. (\code{flywire_in(fw.meta = flywire_meta())}).
}
\details{
flywire tracing google sheets should have the columns: flywire.xyz (a single cardinal position for each neuron in raw FlyWire voxel space),
flywire.svid (the supervoxel ID for this position) and flywire.id (the flywire root ID for the neuron that can be found at this position). Additional, informative columns
are encouraged. A sheet in this format can be updated using \code{\link{flywire_ids_update}}.
This updates the 'unstable' flywire.id column based on the stable flywire.xyz column, and also provides
stable flywire.svid column if it is empty.
}
\examples{
\donttest{
\dontrun{

# Quick look at what we have on the google sheet
sheetlist=googlesheets4::sheet_properties(
"1QyuHFdqz705OSxXNynD9moIsLvZGjjBjylx5sGZP2Yg")
View(sheetlist)

# Go to specific tab of lineage google sheet
flywire_tracing_sheet("AOTUv1_v", open = TRUE)
flywire_tracing_sheet("CREa1_v.*_r", open = TRUE)

# Get this tab as a data frame
flywire.lineage.sheet = flywire_tracing_sheet("CREa1_v.*_l")

# Get the whole sheet as a data frame
flywire.lineage.sheet = flywire_tracing_sheets()
## Note, the memoisation lasts for 30 minutes.
## I.e. this takes a long time to run but is saved for
## 30 mins on yuor computer. So if the function is called again
## with the same arguments, the sheets are not read again.

# See if we have a certain flywire neuron in our sheets
in.lin = flywire_in(query = "111437.5,21121.25,2661",
query.type = "flywire.xyz", Verbose = TRUE,
fw.meta = flywire_tracing_sheets())

# And in the meta data for neurons on the google drive
in.meta = flywire_in(query = "111437.5,21121.25,2661",
query.type = "flywire.xyz", Verbose = TRUE)

}}
}
\seealso{
\code{\link{flywire_ids}},
  \code{\link{flywire_meta}},
  \code{\link{flywire_neurons}}
}
