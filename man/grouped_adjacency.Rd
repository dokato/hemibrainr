% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hemibrain_adjacency.R
\name{grouped_adjacency}
\alias{grouped_adjacency}
\title{Flexible grouping of rows/columns of a raw adjacency matrix}
\usage{
grouped_adjacency(
  inputids = NULL,
  outputids = NULL,
  ingroup = c("type", "name", "cellBodyFiber"),
  outgroup = c("type", "name", "cellBodyFiber"),
  threshold = c(1, 0),
  scale = c("none", "col", "row"),
  ...
)
}
\arguments{
\item{inputids}{Either the bodyids of the input neurons OR an adjacency
matrix}

\item{outputids}{bodyids of the output neurons. Not required if
\code{inputids} is an adjacency matrix.}

\item{ingroup, outgroup}{grouping variables used to coalesce related neurons}

\item{threshold}{Remove (groups of) neurons that make fewer connections than
this. If you provide a length two vector the first threshold will be an
absolute value applied before scaling, while the second will be a
fractional value applied after scaling.}

\item{scale}{Whether to scale the rows or columns so that they sum to 1.
Default is \code{'none'}.}

\item{...}{Additional arguments passed to
\code{\link{neuprint_get_adjacency_matrix}}}
}
\value{
named numeric matrix with rows for input groups and columns for
  output groups.
}
\description{
Create a summary adjacency matrix in which input and/or output neurons are
coalesced into a smaller number of rows/columns. This can be used as a
preprocessing step to present a simple representation of the connectivity
between a larger number of cells in a heatmap.
}
\details{
The default value of threshold is \code{c(1, 0)}. When
  \code{scale=F} this will not apply a threshold. When \code{scale=T} this
  will apply a threshold of 1 to the raw counts before scaling to ensure that
  only valid output will be returned.
}
\examples{
\donttest{
# Default: search by type and group by type
# NB first search is by regex
# do not group input neurons but leave one row for each neuron
da2pnkc=grouped_adjacency("/.*DA2.*PN.*", 'KC', ingroup = NULL)
heatmap(da2pnkc)

# alternatively, if you want to play around with different arguments,
# you can get the raw adjacency matrix and then group that in different
# ways
\dontrun{
pnkc.raw=neuprint_get_adjacency_matrix(inputids = class2ids("PN"),
  outputids = 'KC')
pnkc.bytype=grouped_adjacency(pnkc.raw, ingroup = "type", outgroup = "type")
heatmap(pnkc.bytype)

# slightly finer groups
heatmap(grouped_adjacency(pnkc.raw, ingroup = "type", outgroup = "name"))
# add a threshold to remove neurons that make very few connections
heatmap(grouped_adjacency(pnkc.raw, ingroup = "type", outgroup = "name",
  threshold=50))

# Trying scaling to see relative input onto different groups
# of Kenyon cell target neurons. col=>
heatmap(grouped_adjacency(pnkc.raw, ingroup = "type", outgroup = "name",
  scale='col', threshold = c(1,0.01)))
}
}
}
\seealso{
\code{\link{neuprint_get_adjacency_matrix}}
}
