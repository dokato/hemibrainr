% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flywire_matching.R, R/hemibrain_matching.R
\name{LR_matching}
\alias{LR_matching}
\alias{hemibrain_matching}
\alias{lm_matching}
\alias{fafb_matching}
\title{Match up neurons between the hemibrain and FAFB}
\usage{
LR_matching(
  ids = NULL,
  mirror.nblast = NULL,
  selected_file = options()$hemibrainr_matching_gsheet,
  batch_size = 50,
  db = flywire_neurons(),
  query = flywire_neurons(mirror = TRUE),
  overwrite = FALSE
)

hemibrain_matching(
  ids = NULL,
  hemibrain.nblast = NULL,
  selected_file = options()$hemibrainr_matching_gsheet,
  batch_size = 10,
  db = hemibrain_neurons(),
  repository = c("CATMAID", "flywire", "lm"),
  query = NULL,
  overwrite = c("FALSE", "mine", "mine_empty", "TRUE"),
  column = NULL,
  field = NULL
)

lm_matching(
  ids = NULL,
  hemibrain.nblast = NULL,
  selected_file = options()$hemibrainr_matching_gsheet,
  batch_size = 50,
  db = hemibrain_neurons(),
  query = NULL,
  overwrite = c("FALSE", "mine", "mine_empty", "TRUE")
)

fafb_matching(
  ids = NULL,
  repository = c("CATMAID", "flywire"),
  hemibrain.nblast = NULL,
  selected_file = options()$hemibrainr_matching_gsheet,
  batch_size = 50,
  db = hemibrain_neurons(),
  query = NULL,
  overwrite = c("FALSE", "mine", "mine_empty", "TRUE"),
  column = NULL,
  field = NULL
)
}
\arguments{
\item{ids}{body IDs for hemibrain neurons present in the
\href{https://docs.google.com/spreadsheets/d/1OSlDtnR3B1LiB5cwI5x5Ql6LkZd8JOS5bBr-HTi0pOw/edit#gid=0}{Google
 Sheet}, for which the user will attempt to make a match if one has not
been made already. Else, LM neuron IDs in the tab 'lm' when using \code{lm_matching}.}

\item{mirror.nblast}{a flywire (rows) - flywire-mirrored (columns) normalised
NBLAST matrix. By default this is read from the hemibrain Team Drive.}

\item{selected_file}{the Google Sheet database to read and write from. For
now, defaults to this
\href{https://docs.google.com/spreadsheets/d/1OSlDtnR3B1LiB5cwI5x5Ql6LkZd8JOS5bBr-HTi0pOw/edit#gid=0}{Google
 Sheet}.}

\item{batch_size}{the number of FAFB top matches to read from CATMAID in one
go.}

\item{db}{Either a neuronlist or the name of a character vector naming a
neuronlist. Defaults to the value of \code{\link{hemibrain_neurons}()}.}

\item{query}{a neuronlist of light level neurons to match against. Should correspond to the given NBLAST matrix.
Defaults to reading a transformed \code{most.lhns} from the Hemibrain Google Team Drive.}

\item{overwrite}{Whether or not to overwrite matches already made.
The neurons you could possibly be looking at are selected through
the arguments: \code{ids}, \code{column}, \code{field}. If \code{ids} is \code{NULL} you will be given all neurons that have been assigned to your user on the
\href{https://docs.google.com/spreadsheets/d/1OSlDtnR3B1LiB5cwI5x5Ql6LkZd8JOS5bBr-HTi0pOw/edit#gid=0}{Google sheet}.
If \code{overwrite} is set to \code{FALSE}, you will not overwrite any matches that have already been made from among the selected neurons.
If \code{'mine'} you will re-examine and overwrite any matches you have made out of the selected neurons.
With \code{'mine_empty'} the same happens, but you will also retain neurons that have no match, and have been assigned to any other user.
If \code{"FALSE} (be careful!) then you overwrite made matches among the selected neurons.}

\item{hemibrain.nblast}{a FAFB (rows) - hemibrain (columns) normalised
NBLAST matrix. By default this is read from the flyconnectome Team Drive.}

\item{repository}{whether to match up FAFB skeletons from
CATMAID (using \code{catmaid::read.neurons.catmaid}) or flywire (using \code{flywire_neurons}) for matching. Alternatively,light level
skeletons  (\code{"lm"}) from Dolan et al. and Frechter et al. 2019 (eLife), stored in the package \code{lhns} as
\code{most.lhns}.}

\item{column}{defaults to \code{NULL}, no further subsetting. Else, you can select a column from the Google sheet.
Only  neurons with a certain value (\code{field}) in that column will be chosen for matching.}

\item{field}{defaults to \code{NULL}, no further subsetting. Else, it is a value in \code{column}.}
}
\description{
Match up neurons between the hemibrain, FAFB and light level data and save the
  result using a
  \href{https://docs.google.com/spreadsheets/d/1OSlDtnR3B1LiB5cwI5x5Ql6LkZd8JOS5bBr-HTi0pOw/edit#gid=0}{Google
  Sheet} on the hemibrain Google Team Drive operated by the flyconnectome
  group at the University of Cambridge. You must have access to the Team Drive
  in order to use this function. This function makes use of the Google
  Filestream application, which should be installed on your machine. Further,
  note that neurons are read from the FAFB CATMAID project, and you must have
  login details for this project recorded in your .Renviron for these
  functions to work.
}
\details{
Currently, the
  \href{https://docs.google.com/spreadsheets/d/1OSlDtnR3B1LiB5cwI5x5Ql6LkZd8JOS5bBr-HTi0pOw/edit#gid=0}{Google
   Sheet} is set up with  limited number of users, each of whom have been
  assigned a number of neurons to match up. In order to add yourself as a
  user, simply open this Google Sheet in your browser and add your initials
  to neurons of your choosing on the rightmost column 'Users'. Once a match
  is recorded, the user selects a quality for that match. There can be no
  match (none), a poor match (poor) an okay match (okay) or an exact match (good). As a
  rule of thumb, a poor match could be a neuron from a very similar same cell
  type or a highly untraced neuron that may be the correct cell type. An okay
  match should be a neuron that looks to be from the same morphological cell
  type but there may be some discrepancies in its arbour. A good match is a
  neuron that corresponds well between FAFB and the hemibrain data.
}
\examples{
\donttest{
\dontrun{

# install package to bridge neurons between FAFB14 and hemibrain space
if (!requireNamespace("remotes")) install.packages("remotes")
remotes::install_github('natverse/nat.jrcbrains')
nat.jrcbrains::download_saalfeldlab_registrations()

# Load precomputed NBLAST from the flyconnectome Team Drive
load(file.path("/Volumes/GoogleDrive/Shared drives/flyconnectome/",
  "fafbpipeline/fib.fafb.crossnblast.twigs5.mean.compress.rda"))
# Sometimes the filenames are changed by drive
# load(file.path("/Volumes/GoogleDrive/Shared drives/flyconnectome",
# "fafbpipeline/fib.fafb.crossnblast.twigs5.mean.compress (1).rda"))

# Match!
hemibrain_matching(hemibrain.nblast = fib.fafb.crossnblast.twigs5.mean.compress)
}}
}
\seealso{
\code{\link{hemibrain_adjust_saved_split}}
}
